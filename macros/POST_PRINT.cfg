[gcode_macro POST_PRINT]
description: Clean up states, turn off heaters, set fan timeouts and park at rear. Disable with '_DISABLE_POST_PRINT'
variable_disabled: 0
gcode:
    {% set i_am_disabled = (disabled == 1) %}

    {% set unload = params.UNLOAD_AT_END|default(0)|int %}
    M117 Post Print
    STATUS_BUSY

    _PARK Z_HOP=20
    M107                                                ; Turn off PCF
    SET_FAN_SPEED FAN=nevermore SPEED=1
    SET_FAN_TIMEOUTS NEVERMORE=300 PCF=300 EXHAUST=600
    BED_MESH_CLEAR ; Always clear mesh, as using adaptive mesh, so the existing one was probably wrong

    {% if i_am_disabled %}
        _RESPOND P="POST_PRINT" M="Cooldown / cleanup is disabled."
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer["gcode_macro _PRE_PROBE"].probe_temp}

        STATUS_READY
    {% else %}
        {% if unload | int == 1 %}
            STATUS_UNLOADING
            ERCF_EJECT
            STATUS_BUSY
        {% endif %}
        COOLDOWN_LEDS
        TURN_OFF_HEATERS
        M84 ; Turn off steppers
    {% endif %}

    ; blank display message
    M117

[gcode_macro _DISABLE_POST_PRINT]
gcode:
    SET_GCODE_VARIABLE MACRO=POST_PRINT VARIABLE=disabled VALUE=1

[gcode_macro _ENABLE_POST_PRINT]
gcode:
    SET_GCODE_VARIABLE MACRO=POST_PRINT VARIABLE=disabled VALUE=0

[gcode_macro _POST_PRINT_STATE]
gcode:
    {% set state_hr = "enabled" %}
    {% if (printer["gcode_macro POST_PRINT"].disabled == 1) %}
        {% set state_hr = "disabled" %}
    {% endif %}

    _RESPOND P="POST_PRINT" M="State: {state_hr}"
